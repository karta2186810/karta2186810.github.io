{"version":3,"sources":["utils/index.ts","utils/http.ts","utils/use-async.ts","components/ErrorBoundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx","auth-prodiver.ts","components/lib.tsx","context/AuthContext.tsx"],"names":["cleanObj","obj","result","Object","keys","forEach","key","value","undefined","isVoid","useMount","callback","useEffect","useDebounce","delay","useState","debounceValue","setDebounceValue","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","window","location","href","origin","subset","filterEntries","entries","filter","includes","fromEntries","useMountedRef","mountedRef","apiUrl","process","http","endpoint","a","data","token","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","reload","Promise","reject","message","json","ok","useHttp","user","useAuth","useCallback","defaultInitialState","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","useReducer","state","action","safeDispatch","dispatch","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isSuccess","isError","ErrorBoundary","this","props","fallbackRender","children","React","Component","AuthenticatedApp","lazy","UnauthenticatedApp","App","className","FullPageErrorFallback","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","QueryClientProvider","client","QueryClient","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","res","register","logout","removeItem","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","Text","type","ButtonNoPadding","Button","PageContainer","AuthContext","createContext","displayName","boostrapUser","AuthProvider","setUser","queryClient","useQueryClient","Provider","form","clear","context","useContext"],"mappings":"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","file":"static/js/main.035922f5.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\n// 判斷是否為 0\nexport const isFalsy = (value: unknown) => (value === 0 ? true : !value);\n// 判斷是否為無意義的值\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === \"\";\n\n// 清除物件中無意義值的鍵，以便於qs進行轉換\nexport const cleanObj = (obj: { [key: string]: unknown }) => {\n  // immutable\n  const result = { ...obj };\n  Object.keys(result).forEach((key) => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\n// 模擬onmount的hook\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\n// debounce hook\nexport const useDebounce = <V>(value: V, delay: number) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebounceValue(value), delay);\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n  return debounceValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      setValue(copy.splice(index, 1));\n    },\n  };\n};\n\n// 用於動態變更title的hook\nexport const useDocumentTitle = (title: string, keepOnUnmount = true) => {\n  // 使用ref將原始的路徑儲存\n  const oldTitle = useRef(document.title).current;\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\n// 用於重製路由狀態的函數\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n// 傳入物件和鍵陣列，返回想要查找的鍵構成的物件\nexport const subset = <O extends { [key: string]: unknown }, K extends keyof O>(\n  obj: O,\n  keys: K[]\n) => {\n  const filterEntries = Object.entries(obj).filter(([key]) =>\n    keys.includes(key as K)\n  );\n\n  return Object.fromEntries(filterEntries) as Pick<O, K>;\n};\n\n// 返回組件的掛載狀態，如果尚未掛載或已卸載，返回false，否則返回true\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    // 掛載時為true\n    mountedRef.current = true;\n    return () => {\n      // 卸載時為false\n      mountedRef.current = false;\n    };\n  });\n  return mountedRef;\n};\n","/** AJAX的util函數 */\n\nimport qs from \"qs\";\nimport * as auth from \"auth-prodiver\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { useCallback } from \"react\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\n\n// 接收地址及參數發送AJAX請求的函數\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...customConfig,\n  };\n  // 判斷method是否為GET，對data進行不同處理\n  if (config.method.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n  // 返回請求的結果\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, config)\n    .then(async (response) => {\n      // 如果請求不通過\n      if (response.status === 401) {\n        await auth.logout();\n        window.location.reload(); // 刷新網頁，確保所有狀態都被清理\n        return Promise.reject({ message: \"請重新登入\" });\n      }\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        return Promise.reject(data); // fetch需要手動拋出異常\n      }\n    });\n};\n\n// useHttp根據user中的狀態，返回含有token的AJAX函數\nexport const useHttp = () => {\n  const { user } = useAuth();\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token]\n  );\n};\n","/*\n * 用於異步獲取數據，並返回數據和請求狀態的鉤子\n * */\nimport { useCallback, useReducer, useState } from \"react\";\nimport { useMountedRef } from \"./index\";\n\n// 狀態的介面\ninterface State<T> {\n  error: Error | null;\n  data: T | null;\n  status: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\n// 默認狀態\nconst defaultInitialState: State<null> = {\n  status: \"idle\",\n  data: null,\n  error: null,\n};\n// 默認設定，使拋出異常為可選的\nconst defaultConfig = {\n  throwOnError: false,\n};\n\n// 根據組件狀態判斷是否執行dispatch的鉤子\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  // 用於判斷組件狀態的鉤子\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [mountedRef, dispatch]\n  );\n};\n\nexport const useAsync = <T>(\n  initialState?: State<T>,\n  initialConfig?: typeof defaultConfig\n) => {\n  // 初始化設定\n  const config = {\n    ...defaultConfig,\n    ...initialConfig,\n  };\n  // 使用useReducer，reducer設置成將當前狀態與新傳入的狀態合併\n  const [state, dispatch] = useReducer(\n    (state: State<T>, action: Partial<State<T>>) => ({ ...state, ...action }),\n    {\n      // 初始化狀態\n      ...defaultInitialState,\n      ...initialState,\n    }\n  );\n\n  const safeDispatch = useSafeDispatch(dispatch);\n\n  const [retry, setRetry] = useState(() => () => {});\n\n  // 請求成功時，設置data\n  const setData = useCallback(\n    (data: T) =>\n      safeDispatch({\n        data,\n        status: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  // 請求失敗時，設置error\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        error,\n        data: null,\n        status: \"error\",\n      }),\n    [safeDispatch]\n  );\n\n  // 異步請求，並根據情況改變狀態\n  const run = useCallback(\n    (promise: Promise<T>, runConfig?: { retry: () => Promise<T> }) => {\n      // 如果沒有傳入參數，或參數不是Promise物件，返回警告\n      if (!promise || !promise.then) {\n        throw new Error(\"請傳入 Promise 類型的數據\");\n      }\n      // 設置狀態為loading\n      safeDispatch({ status: \"loading\" });\n\n      // 每次執行run時，就將這次的請求函數設置給retry\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig?.retry(), runConfig);\n        }\n      });\n\n      return promise\n        .then((data) => {\n          setData(data);\n          return data;\n        })\n        .catch((error) => {\n          setError(error);\n          // catch會消化異常，如果需要外部也可以接收到異常，需手動拋出\n          if (config.throwOnError) return Promise.reject(error);\n          return error;\n        });\n    },\n    [config.throwOnError, safeDispatch, setData, setError]\n  );\n\n  return {\n    isIdle: state.status === \"idle\",\n    isLoading: state.status === \"loading\",\n    isSuccess: state.status === \"success\",\n    isError: state.status === \"error\",\n    run,\n    setData,\n    setError,\n    retry,\n    ...state,\n  };\n};\n","import React from \"react\";\n\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\nexport class ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\n  { error: Error | null }\n> {\n  state = {\n    error: null,\n  };\n\n  // 當此組件的子組件拋出error時，此方法會將state設置為拋出拋出的error\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n\n    if (error) {\n      return fallbackRender({ error });\n    }\n    return children;\n  }\n}\n","import React from \"react\";\n// import { ProjectListPage } from \"./pages/ProjectList\";\nimport \"./App.css\";\nimport { useAuth } from \"./context/AuthContext\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport { FullPageErrorFallback, FullPageLoading } from \"./components/lib\";\n\nconst AuthenticatedApp = React.lazy(() => import(\"./AuthenticatedApp\"));\nconst UnauthenticatedApp = React.lazy(() => import(\"./UnauthenticatedApp\"));\n\nfunction App() {\n  const { user } = useAuth();\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * 統一各個context的組件\n * */\nimport { ReactNode } from \"react\";\nimport { AuthProvider } from \"./AuthContext\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  return (\n    <QueryClientProvider client={new QueryClient()}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { loadServer, DevTools } from \"jira-dev-tool\";\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"./context\";\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { User } from \"./types/user\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\n// 將返回的token設置在localStorage中\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n// 發送login請求，並操作localStorage\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      // fetch需要手動拋出異常\n      return Promise.reject(await res.json());\n    }\n  });\n};\n// 發送register請求，並操作localStorage\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n// 登出，並操作localStorage\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","/* 工具組件 */\nimport styled from \"@emotion/styled\";\nimport { Button, Spin, Typography } from \"antd\";\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  > * {\n    margin-top: 0; !important;\n    margin-bottom: 0; !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n// 全畫面Loading組件\nexport const FullPageLoading = () => {\n  return (\n    <FullPage>\n      <Spin size={\"large\"} />\n    </FullPage>\n  );\n};\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => {\n  return (\n    <FullPage>\n      <ErrorBox error={error} />\n    </FullPage>\n  );\n};\n\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const PageContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","/*\n * 控制登入註冊的context和操作該context的hook\n * */\nimport React, { useContext, ReactNode } from \"react\";\nimport * as auth from \"auth-prodiver\";\nimport { http } from \"../utils/http\";\nimport { useMount } from \"../utils\";\nimport { useAsync } from \"../utils/use-async\";\nimport { FullPageErrorFallback, FullPageLoading } from \"../components/lib\";\nimport { DevTools } from \"jira-dev-tool\";\nimport { useQueryClient } from \"react-query\";\nimport { User } from \"../types/user\";\n\n// 表單內容的interface\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n// 創建 context\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: AuthForm) => Promise<void>;\n      register: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\n\nAuthContext.displayName = \"AuthContext\";\n\n// 嘗試從localStorage中獲取token，並攜帶token發送請求取得user數據\nconst boostrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\n// AuthProvider Component\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  // 初始化含有loading、error、data訊息的狀態\n  const {\n    data: user,\n    setData: setUser,\n    error,\n    isError,\n    isLoading,\n    isIdle,\n    run,\n  } = useAsync<User | null>();\n\n  const queryClient = useQueryClient();\n  // 發送Auth有關的請求，並設置AuthContext的狀態\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null); // 重製user\n      queryClient.clear(); // 清除 react-query 的 cache\n    });\n\n  // 嘗試從localStorage取得token，並向 '/me' 發送請求\n  useMount(() => {\n    run(boostrapUser());\n  });\n\n  // 在請求成功返回之前，返回全畫面Loading組件\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  // 如果出錯，返回錯誤頁面\n  if (isError) {\n    return (\n      <div>\n        <DevTools />\n        <FullPageErrorFallback error={error} />\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\n// 取得 AuthContext 的 hook\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必須在AuthProvider中使用\");\n  }\n  return context;\n};\n"],"sourceRoot":""}